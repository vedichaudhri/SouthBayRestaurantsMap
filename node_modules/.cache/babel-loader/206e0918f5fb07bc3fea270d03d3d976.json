{"ast":null,"code":"var _jsxFileName = \"/Users/vchaudhr/Desktop/Stanford/448/hw3/SBFood/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './site.css'; //import App from './App';\n\nimport * as serviceWorker from './serviceWorker'; //import ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\n//import { csv2geojson } from 'csv2geojson';\n\nimport mapboxgl from 'mapbox-gl'; //import data from 'data.geojson';\n\nlet data = [];\ndataBuilder(JSON.parse(fs.readFileSync(path.join(__dirname, '/data/data.geojson'), 'utf8')), 'data');\n\nfunction dataBuilder(gj, type) {\n  gj.features.forEach(function (feature) {\n    feature.properties.type = type;\n\n    if (feature.properties.TEL) {\n      feature.properties.phoneformatted = phoneFormatted(feature.properties.TEL);\n    }\n\n    data.push(feature);\n  });\n}\n\nmapboxgl.accessToken = 'pk.eyJ1IjoidmVkaWNoYXVkaHJpIiwiYSI6ImNrNjM2NGpxYjAxaG8zbW1weTNuMmxydDkifQ.2Va6SpC54bm8IkG0SGZ8lw';\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -122.1430195,\n      lat: 37.4418834,\n      zoom: 9\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    map.on('move', () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebarStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Longitude: \", this.state.lng, \" | Latitude: \", this.state.lat, \" | Zoom:\", ' ', this.state.zoom)), React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Application, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}), document.getElementById('app')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/vchaudhr/Desktop/Stanford/448/hw3/SBFood/src/index.js"],"names":["React","ReactDOM","serviceWorker","mapboxgl","data","dataBuilder","JSON","parse","fs","readFileSync","path","join","__dirname","gj","type","features","forEach","feature","properties","TEL","phoneformatted","phoneFormatted","push","accessToken","Application","Component","constructor","props","state","lng","lat","zoom","componentDidMount","map","Map","container","mapContainer","style","center","on","setState","getCenter","toFixed","getZoom","render","el","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './site.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\n//import { csv2geojson } from 'csv2geojson';\nimport mapboxgl from 'mapbox-gl';\n//import data from 'data.geojson';\n\nlet data = [];\ndataBuilder(\n  JSON.parse(\n    fs.readFileSync(path.join(__dirname, '/data/data.geojson'), 'utf8')\n  ),\n  'data'\n);\n\nfunction dataBuilder(gj, type) {\n  gj.features.forEach(function(feature) {\n    feature.properties.type = type;\n    if (feature.properties.TEL) {\n      feature.properties.phoneformatted = phoneFormatted(\n        feature.properties.TEL\n      );\n    }\n    data.push(feature);\n  });\n}\n\nmapboxgl.accessToken =\n  'pk.eyJ1IjoidmVkaWNoYXVkaHJpIiwiYSI6ImNrNjM2NGpxYjAxaG8zbW1weTNuMmxydDkifQ.2Va6SpC54bm8IkG0SGZ8lw';\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -122.1430195,\n      lat: 37.4418834,\n      zoom: 9\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    map.on('move', () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"sidebarStyle\">\n          <div>\n            Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{' '}\n            {this.state.zoom}\n          </div>\n        </div>\n        <div ref={el => (this.mapContainer = el)} className=\"mapContainer\" />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Application />, document.getElementById('app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}